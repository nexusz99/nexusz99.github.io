---
layout: post
title:  "NHN ENtertainment 토스트 루키 기술교육 2월 1주차 회고"
date:   2017-01-12 06:09:38 +0000
categories: diary
---

> 똥을 제때 안치우면.. 재앙이 된다

9주간의 교육 중 벌써 4주차가 지나갔다. 절반이 넘어가는 이 시점이자 지금까지 개발한 내용이 점점 더 고도화 되어가는 시점이다.

지금 개발하고 있는 서비스는 어떻게 보면 정말 간단한 CRUD만으로 구성된 웹 어플리케이션이다. 기획에 따라서 비즈니스 로직의 복잡도는 다르겠지만, 기술적인 난이도는 매우 낮은 수준이라고 할 수 있다.

하지만, 이번 프로젝트는 그전에 내가 해왔던 개발 프로세스에서 한 층 더 발전(?)된 프로세스를 가지고 가고 있다고 생각한다.

지금가지고 있는 이 생각이 후에 큰 자산이 되기에, 어떤 점에서 기존과 다르다고 느끼는지 하나하나 정리해보았다.

## 테스트 케이스
그동안 여러 개발자 커뮤니티를 나가면서 테스트 케이스의 중요성은 많이 들어왔다. 하지만 그것을 실천하는 것은 매우 어려웠다. 가장 큰 원인은 아마도 **습관**화 되지 않았기 때문이라고 생각한다. 처음 프로그래밍을 배울 때 부터, 테스트를 만드는 것보다는 바로 무언가 만들어 보는 것 부터 시작했다보니 바로 돌아가는 코드를 작성하는게 몸에 베어있다.

하지만, 이번 교육과정 중에 테스트 케이스를 강제(?)화 하여 짜는 과제 덕분에 프로젝트에 드디어 테스트 케이스라는 것을 도입할 수 있었다. 물론 TDD로 개발한 것이 아니라, 비즈니스 코드는 다 나온 상태에서 그것들을 테스트하는 수준이였지만 그래도 테스트 케이스라는 것을 만들었다는데 큰 의미를 두고 싶다.

이번 테스트 케이스를 만들어보면서 아쉬운 점도 고민해야할 점도 많았다.

* 테스트 케이스가 정말 비즈니스 로직을 잘 테스트할 수 있도록 작성되어있는가?
* 테스트 케이스에서 테스트를 하기 어려운 부분을 없애기 위해 서비스 로직을 변경하였는가?
* 다양한 예외 상황을 테스트 케이스에서 어떻게 만들어 낼 수 있을까?
* 데이터 베이스 / 네트워크 와 같은 환경을 이용한 테스트는 어떻게 만들 것 인가?

위 4가지가 이번에 테스트 케이스를 만들면서 고민 한 가장 큰 것들이다.

앞으로, 위 고민들을 해결해보기 위해 다양한 테스트 프레임워크들을 조사해보고 공부해보고 적용해보면서 테스트 케이스 작성을 몸에 익혀야겠다.

## 모델링
그동안 데이터 베이스 모델링에 대한 검수/검증을 받아보면서 서비스를 만들어본 적은 없었다. 이전 회사에서 L모회사의 프로젝트를 진행할 떄도, 모델링에 대한 책임까지도 개발자인 나에게 있었고, 그나마 같은 팀의 다른 개발자분의 경험을 반영하여 모델과 DDL등을 개선해나가는 정도였다.

이번에 처음으로 내가 모델링한 모델에 대해 전문 모델러의 피드백을 받아보면서 그동안 잘 못하고 있었던 부분은 무엇인지? 어떤 점들을 더 고려해야하는지 표준은 무엇인지에 대한 내용을 들을 수 있었다.

간단히 피드백을 정리해보면 다음과 같다.

* 각 테이블에는 반드시 PK가 있어야한다. 만약 유일한 엔티티를 뽑아낼 수 없다면 인조식별자를 만들어서 PK로 만들어야한다.
* 관계선을 명확하게 지정해야한다.
* 손자 테이블은 굳이 할아버지 테이블과 관계를 가질 필요는 없다.
* insert 되는 데이터는 반드시 생성 및 수정 일자까지 저장해주어야 한다.
* update가 자주 일어나는 column 은 따로 테이블로 분리하는 것이 성능상 이점을 가져올 수 있다.

-------------

앞으로 남은 교육들을 통해 어떤 새로운 것들을 적용하면서 성장해나갈지 기대가 된다.